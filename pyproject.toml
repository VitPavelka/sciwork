[project]
name = "sciwork"
version = "0.1.1"
description = "Scientific workflows toolkit (config loading/validation, logging, path operations, and more)"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "VÃ­t Pavelka" }]
keywords = ["science", "config", "ini", "json", "validation", "schema", "paths"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]

# Runtime deps (core currently uses only stdlib)
dependencies = []

[project.optional-dependencies]
# Developer tooling and tests
dev = [
  "pytest>=8.0",
  "ruff>=0.5",
]
# Documentation
docs = [
  "mkdocs-material>=9.5",
  "mkdocstrings[python]>=0.24",
  "pymdown-extensions>=10.0",
]
# Optional console niceties
console = ["colorama>=0.4.6"]
# Optional FS helpers (planned/used by fs module)
fs = [
  "Send2Trash>=1.8.2",
  "Pillow>=10.0",    # for EXIF when available
]

[project.urls]
Homepage = "https://github.com/VitPavelka/sciwork"
Documentation = "https://VitPavelka.github.io/sciwork/"
Issues = "https://github.com/VitPavelka/sciwork/issues"

[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["sciwork*"]

# If you later ship package data inside src/sciwork/..., configure here:
# [tool.setuptools.package-data]
# "sciwork" = ["configs/*.json"]

# Ruff (optional)
[tool.ruff]
line-length = 100
target-version = "py310"
